/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* previous = nullptr;
        if (head == nullptr || head -> next == nullptr) {
            return head;
        }
        ListNode* current = head;
        ListNode* ahead = head -> next;

        while (ahead != nullptr) {
            current -> next = previous;
            previous = current;
            current = ahead;
            ahead = ahead -> next;
        }
        current -> next = previous;
        return current;
    }
};
