#include <stack>
#include <iostream>

using namespace std;

class MyQueue {
private:
    stack <int> queueStack;
    stack <int> helperStack;

public:
    MyQueue() {
        stack <int> queueStack;
        stack <int> helperStack;
    }
    
    void push(int x) {
        while (not queueStack.empty()) {
            helperStack.push(queueStack.top());
            queueStack.pop();
        }
        
        helperStack.push(x);
        
        while (not helperStack.empty()) {
            queueStack.push(helperStack.top());
            helperStack.pop();
        }
    }
    
    int pop() {
        if (not empty()) {
            int value = queueStack.top();
            queueStack.pop();
            return value;
        }
        return -666;
    }
    
    int peek() {
        if (not empty()) {
            return queueStack.top();
        }
        return -666;
    }
    
    bool empty() {
        if (queueStack.empty()) return true;
        return false;
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */
